spring:
  # MySQL Database Configuration for Production
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:trading}?useSSL=true&serverTimezone=Asia/Hong_Kong&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false&maxReconnects=3&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME:trading_user}
    password: ${DB_PASSWORD:}
    hikari:
      pool-name: TradingHikariPool
      maximum-pool-size: 20
      minimum-idle: 10
      idle-timeout: 600000
      connection-timeout: 30000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      connection-test-query: SELECT 1
  
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        generate_statistics: false
        jdbc:
          batch_size: 50
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        query:
          in_clause_parameter_padding: true
  
  # Redis Configuration for Production
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: -1ms
        shutdown-timeout: 100ms
      
  cache:
    type: redis
    redis:
      time-to-live: 3600000  # 1 hour
      cache-null-values: false
      use-key-prefix: true
      key-prefix: trading:
    
server:
  port: ${SERVER_PORT:8080}
  shutdown: graceful
  tomcat:
    threads:
      max: 500
      min-spare: 50
    accept-count: 100
    max-connections: 10000
    connection-timeout: 60s
    accesslog:
      enabled: true
      directory: /var/log/trading
      pattern: common
      prefix: access_log
      suffix: .log
      rotate: true
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false
    
# Production Logging
logging:
  level:
    root: WARN
    com.trading: INFO
    org.springframework: WARN
    org.hibernate: WARN
    com.lmax.disruptor: INFO
  file:
    name: /var/log/trading/trading-system.log
    max-size: 100MB
    max-history: 90
    total-size-cap: 10GB
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n"

# Trading System Production Settings
trading:
  execution:
    mode: ${TRADING_MODE:PAPER}  # Can be overridden to LIVE
    mock-data: false
    
  monitoring:
    enabled: true
    alert-email: ${ALERT_EMAIL:admin@trading.com}
    alert-webhook: ${ALERT_WEBHOOK:}
    
  risk:
    daily-loss-limit-check: true
    position-limit-check: true
    emergency-stop: ${EMERGENCY_STOP:false}
    
# Disruptor Configuration for Production
disruptor:
  ring-buffer-size: 65536
  wait-strategy: BUSY_SPIN  # Lowest latency
  producer-type: MULTI
  
# Actuator - Limited exposure in production
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
        pushgateway:
          enabled: ${PUSHGATEWAY_ENABLED:false}
          base-url: ${PUSHGATEWAY_URL:}
    tags:
      application: ${spring.application.name}
      environment: production
      
# Security Headers
server:
  servlet:
    session:
      timeout: 30m
      cookie:
        http-only: true
        secure: true
        same-site: strict
        
# API Documentation - Disabled in production
springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false
    
# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      market-data:
        register-health-indicator: true
        sliding-window-size: 100
        permitted-number-of-calls-in-half-open-state: 10
        wait-duration-in-open-state: 60s
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s
      broker-api:
        register-health-indicator: true
        sliding-window-size: 50
        permitted-number-of-calls-in-half-open-state: 5
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 60
        
# Performance Tuning
spring:
  jmx:
    enabled: false
  devtools:
    restart:
      enabled: false
  main:
    lazy-initialization: false